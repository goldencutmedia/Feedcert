"use strict";
// Copyright IBM Corp. and LoopBack contributors 2019,2020. All Rights Reserved.
// Node module: @loopback/logging
// This file is licensed under the MIT License.
// License text available at https://opensource.org/licenses/MIT
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoggingBindings = void 0;
const core_1 = require("@loopback/core");
/**
 * Binding keys used by this component.
 */
var LoggingBindings;
(function (LoggingBindings) {
    LoggingBindings.COMPONENT = core_1.BindingKey.create('components.LoggingComponent');
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    LoggingBindings.FLUENT_SENDER = core_1.BindingKey.create('logging.fluent.sender');
    /**
     * Binding key for winston logger
     */
    LoggingBindings.WINSTON_LOGGER = core_1.BindingKey.create('logging.winston.logger');
    /**
     * Binding key for winston transport backed by fluent
     */
    LoggingBindings.WINSTON_TRANSPORT_FLUENT = core_1.BindingKey.create('logging.winston.transports.fluent');
    /**
     * Binding key for method invocation logger with winston
     */
    LoggingBindings.WINSTON_INVOCATION_LOGGER = core_1.BindingKey.create('logging.winston.invocationLogger');
    /**
     * Binding key for http access logger with winston
     */
    LoggingBindings.WINSTON_HTTP_ACCESS_LOGGER = core_1.BindingKey.create('logging.winston.httpAccessLogger');
})(LoggingBindings || (exports.LoggingBindings = LoggingBindings = {}));
//# sourceMappingURL=keys.js.map